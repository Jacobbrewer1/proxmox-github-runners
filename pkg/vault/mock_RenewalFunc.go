// Code generated by mockery v2.45.0. DO NOT EDIT.

package vault

import (
	api "github.com/hashicorp/vault/api"
	mock "github.com/stretchr/testify/mock"
)

// MockRenewalFunc is an autogenerated mock type for the RenewalFunc type
type MockRenewalFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields:
func (_m *MockRenewalFunc) Execute() (*api.Secret, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 *api.Secret
	var r1 error
	if rf, ok := ret.Get(0).(func() (*api.Secret, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *api.Secret); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Secret)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockRenewalFunc creates a new instance of MockRenewalFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRenewalFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRenewalFunc {
	mock := &MockRenewalFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
